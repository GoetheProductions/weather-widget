{"version":3,"file":"static/webpack/static/development/pages/index.js.5dc5f1c36304df876a2f.hot-update.js","sources":["webpack:///./pages/index/index.js"],"sourcesContent":["import { Fragment, useState } from 'react';\nimport Router from 'next/router';\nimport NextHead from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Widget from '../../components/Widget';\nimport WidgetItem from '../../components/Widget/WidgetItem';\nimport widgetConstructor from '../../utils/widgetConstructor';\nimport SearchForm from '../../components/SearchForm';\n\nconst Head = () => (\n  <NextHead>\n    <title>Blogs Page</title>\n    <meta name=\"description\" description=\"A test app for looking up weather in Danish cities\" />\n    <meta name=\"keywords\" description=\"weather widget react tv2\" />\n    <meta name=\"author\" description=\"Patrick Goethe\" />\n  </NextHead>\n);\n\nconst Index = ({ data }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearch = e => setSearchQuery(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    Router.push(`/?city=${searchQuery}`);\n  };\n\n  const successfulFetch = data.cod === 200;\n  const weatherData = successfulFetch ? widgetConstructor(data) : {};\n\n  return (\n    <div>\n      <Head />\n      <Widget error={!successfulFetch} title={successfulFetch ? weatherData.name : data.cod}>\n        {successfulFetch ? (\n          <Fragment>\n            <WidgetItem>\n              Temperature:\n              {' '}\n              <b>{weatherData.temperature}</b>\n            </WidgetItem>\n            <WidgetItem>\n              Humidity:\n              {' '}\n              <b>{weatherData.humidity}</b>\n            </WidgetItem>\n            <WidgetItem>\n              Wind:\n              {' '}\n              <b>{weatherData.wind}</b>\n            </WidgetItem>\n          </Fragment>\n        ) : (\n          <WidgetItem>\n            <b>{data.message}</b>\n            {' '}\n(Make sure to check spelling and note that only Danish cities are\n            supported)\n          </WidgetItem>\n        )}\n        <WidgetItem>\n          <SearchForm\n            handleSearch={handleSearch}\n            searchQuery={searchQuery}\n            handleSubmit={handleSubmit}\n          />\n        </WidgetItem>\n      </Widget>\n    </div>\n  );\n};\n\nIndex.getInitialProps = async ({ query }) => {\n  const param = query.city || 'Copenhagen';\n  const res = await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${param},dk&appid=166d00e26d3ff2c6149e89feccc5c59a&units=metric`,\n  );\n  const data = await res.json();\n\n  return { data };\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AACA;AAQA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AA6BA;AACA;AACA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAKA;AALA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}